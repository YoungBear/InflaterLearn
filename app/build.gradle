apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration // 配置
def libs = rootProject.ext.libraries // 库

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }

        release {
            storeFile file('test_example.jks')
            storePassword 'test_example'
            keyAlias 'test_alias'
            keyPassword '123456'
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile("com.android.support.test.espresso:espresso-core:${libs.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support.constraint:constraint-layout:${libs.constraintVersion}"
    testCompile "junit:junit:${libs.junitVersion}"

    //support library start
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"

    //support library end

    //third library start
    compile "com.jakewharton:butterknife:${libs.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
    //third library end
}
